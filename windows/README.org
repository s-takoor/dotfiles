#+TITLE: CONFIG FOR WINDOWS
#+AUTHOR: s.takoor
#+AUTO_TANGLE: t
#+STARTUP: showeverything
#+FILETAGS: :config:org:powershell:starship:

** üöÄ TL;DR
The following aims to provide a pre-configured environment for security engineers by installing various packages and utilities.

** üß∞ DEFAULT PROGRAMS
Below is a quick overview of the functionalities and the install commands for the various tools and utilities that I use on the ~Windows~ system.

*** BAT
- A clone with syntax highlighting and ~Git~ integration
- Not specific to ~Windows~, but can be used on other platforms with compatible shells

**** INSTALLATION
#+begin_src sh
winget install --id=sharkdp.bat  -e
#+end_src

*** DOG
- An open-source ~DNS~ client for the command-line
- Supports various protocols ( e.g. ~DoT~ & ~DoH~ ) and can be useful for network administrators

**** INSTALLATION
#+begin_src sh
winget install --id=ogham.dog  -e
#+end_src

*** EXIFTOOL
- A versatile tool for managing and editing digital asset metadata

**** INSTALLATION
#+begin_src sh
winget install --id=OliverBetz.ExifTool  -e
#+end_src

*** EZA
- A modern replacement for ~ls~ that uses the ~exa~ engine
- More efficient and feature-rich than ~ls~

**** INSTALLATION
#+begin_src sh
winget install --id=eza-community.eza  -e
#+end_src

*** FD
- A simple and efficient alternative to ~find~ for ~Windows~
- Uses a single command to achieve the same results as ~find~

**** INSTALLATION
#+begin_src sh
winget install --id=sharkdp.fd  -e
#+end_src

*** FINDUTILS
~find~ is a program which searches a directory tree to find a file or group of files

**** INSTALLATION
#+begin_src sh
winget install --id=GnuWin32.FindUtils  -e
#+end_src

*** FZF
A general-purpose command-line fuzzy finder

**** INSTALLATION
#+begin_src sh
winget install --id=junegunn.fzf  -e
#+end_src

*** GIT
~Git~ for Windows focuses on offering a lightweight, native set of tools that bring the full feature set of the ~Git SCM~ to ~Windows~ while providing appropriate user interfaces for experienced ~Git~ users and novices alike

**** INSTALLATION
#+begin_src sh
winget install --id=Git.Git  -e
#+end_src

*** HTTPIE
~HTTPie~ for Web & Desktop ‚Äî cross-platform ~API~ testing client for humans. Painlessly test ~REST~, ~GraphQL~, and ~HTTP APIs~

**** INSTALLATION
#+begin_src sh
winget install --id=HTTPie.HTTPie  -e
#+end_src

*** HUNSPELL
~Hunspell~ is a free spell checker and morphological analyzer library and command-line tool, licensed under LGPL/GPL/MPL tri-license

**** INSTALLATION
#+begin_src sh
winget install --id=FSFhu.Hunspell  -e
#+end_src

*** HYPERFINE
A command-line benchmarking tool

**** INSTALLATION
#+begin_src sh
winget install --id=sharkdp.hyperfine  -e
#+end_src

*** LLVM
A collection of modular and reusable compiler and toolchain technologies

**** INSTALLATION
#+begin_src sh
winget install --id=LLVM.LLVM  -e
#+end_src

*** MIKTEX
~MiKTeX~ is a modern ~TeX~ distribution for ~Windows~

**** INSTALLATION
#+begin_src sh
winget install --id=MiKTeX.MiKTeX  -e
#+end_src

*** OLLAMA
Get up and running with large language models locally

**** INSTALLATION
#+begin_src sh
winget install --id=Ollama.Ollama  -e
#+end_src

*** PODMAN
A ~daemonless~ container engine for developing, managing, and running OCI Containers

**** INSTALLATION
#+begin_src sh
winget install --id=RedHat.Podman  -e
#+end_src

*** RIPGREP
~ripgrep~ recursively searches directories for a ~regex~ pattern while respecting your ~gitignore~

**** INSTALLATION
#+begin_src sh
winget install --id=BurntSushi.ripgrep.GNU  -e
#+end_src

*** SD
~sd~ is an intuitive find & replace ~CLI~

**** INSTALLATION
#+begin_src sh
winget install --id=chmln.sd  -e
#+end_src

*** SED
~sed~ (stream editor) is a non-interactive command-line text editor

**** INSTALLATION
#+begin_src sh
winget install --id=mbuilov.sed  -e
#+end_src

*** TEALDEER
A very fast implementation of ~tldr~ in ~Rust~

**** INSTALLATION
#+begin_src sh
winget install --id=dbrgn.tealdeer  -e
#+end_src

*** TOKEI
Count your code, quickly

**** INSTALLATION
#+begin_src sh
winget install --id=XAMPPRocky.Tokei  -e
#+end_src

*** YAZI
Blazing fast terminal file manager written in ~Rust~, based on async I/O

**** INSTALLATION
Download from ~GitHub~

#+begin_src sh
https://github.com/sxyazi/yazi/releases
#+end_src

*** ZOXIDE
~zoxide~ is a smarter ~cd~ command, inspired by ~z~ and ~autojump~

**** INSTALLATION
#+begin_src sh
winget install --id=ajeetdsouza.zoxide  -e
#+end_src

** üêö SHELL PROMPT
- The following provides a custom and customizable shell prompt with support for multiple operating system.

*** STARSHIP
Minimal, blazing-fast, and infinitely customizable prompt for any shell

**** INSTALLATION
#+begin_src sh
winget install --id=Starship.Starship  -e
#+end_src

**** CONFIGURATION
#+begin_src toml :tangle "starship.toml"
add_newline = false

command_timeout = 1000

format = """$os$username$hostname$kubernetes$directory$git_branch$git_status"""

[character]
success_symbol = '[Û∞±Ø  >>](bold green)'
error_symbol = '[Û∞±Ø  >>](bold red)'
vimcmd_symbol = '[ÓüÖ >>](bold blue)'
vimcmd_visual_symbol = '[ÓüÖ >>](bold magenta)'

[os]
format = '[$symbol](bold white) '
disabled = false

[os.symbols]
Arch = 'Û∞£á'
Macos = 'Û∞Äµ'
Ubuntu = 'Ôåõ'
Windows = 'Óò™'

[username]
style_user = 'white bold'
style_root = 'black bold'
format = '[$user]($style) '
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on [$hostname](bold yellow) '
disabled = false

[directory]
truncation_length = 1
truncation_symbol = '‚Ä¶/'
home_symbol = 'Û∞ãú ~'
read_only_style = '197'
read_only = ' ÔÄ£ '
format = 'at [$path]($style)[$read_only]($read_only_style) '

[git_branch]
symbol = 'Ôáí '
format = 'via [$symbol$branch]($style)'
truncation_length = 4
truncation_symbol = '‚Ä¶/'
style = 'bold green'

[git_status]
format = '[$all_status$ahead_behind]($style) '
style = 'bold green'
conflicted = 'üè≥'
up_to_date = ''
untracked = 'Ôî© '
ahead = '‚á°${count}'
diverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'
behind = '‚á£${count}'
stashed = 'Ô£ñ '
modified = 'ÔÅÑ '
staged = '[++\($count\)](green)'
renamed = 'Ë•Å '
deleted = 'ÔÄî '

[kubernetes]
format = 'via [Û±Éæ $context\($namespace\)](bold purple) '
disabled = false

[vagrant]
disabled = true

[docker_context]
disabled = true

[helm]
disabled = true

[python]
disabled = true

[nodejs]
disabled = true

[ruby]
disabled = true

[terraform]
disabled = true
#+end_src

**** POWERSHELL INTEGRATION
- The following sets up the necessary environment variables for ~PowerShell~ and allows for its execution within the shell.
#+begin_src ps1 :tangle "Microsoft.PowerShell_profile.ps1"
$ENV:STARSHIP_CONFIG = "$HOME\.starship\starship.toml"
Invoke-Expression (&starship init powershell)
#+end_src

** ‚óæ TERMINAL
A ~terminal~ is a command-line interface (CLI) that allows users to interact with the operating system directly. It provides a text-based interface where users can enter commands, view system information, and run programs.

*** WEZTERM
- ~Wezterm~ is a GPU-accelerated cross-platform terminal emulator and multiplexer implemented in ~Rust~
- It is designed to provide a fast and efficient way to access the command-line on multiple platforms
- It supports both local and remote connections

**** INSTALLATION
- The code snippet provides a one-time installation command using ~winget~
#+begin_src sh
winget install --id=wez.wezterm  -e
#+end_src

** üìã TEXT / CODE EDITORS
The following are two popular text editors with extensive customization options

*** GNU EMACS
- ~GNU Emacs~ is a powertful and widely-used text editor with a rich set of features

**** INSTALLATION
- The code snippet provides a one-time installation command using ~winget~
#+begin_src sh
winget install --id=GNU.Emacs  -e
#+end_src

*** NEOVIM
- ~Neovim~ is a modern and fork of ~vim~ with a focus on extensibility and usability

**** INSTALLATION
- The code snippet provides a one-time installation command using ~winget~
#+begin_src sh
winget install --id=Neovim.Neovim  -e
#+end_src

** ü™ü WINDOW MANAGER
A window manager is an essential component that manages and displays windows on a computer's desktop. It plays a vital role in ensuring that windows are displayed correctly and efficiently, optimizing workspace organization and user experience. By coordinating window placement and behavior, a window manager enables efficient space management and improves overall productivity.

*** GLAZEWM
- ~GlazeWM~ is a tiling window manager for ~Windows~ inspired ~i3~ and ~Polybar~

**** INSTALLATION
- The code snippet provides a one-time installation command using ~winget~
#+begin_src sh
winget install --id=glzr-io.glazewm  -e
#+end_src

** ‚ö† ADDITIONAL INFORMATION
*Note*
#+begin_quote
- The code snippets requires the ~winget~ package to be installed on the system.
- Make sure that it is available before running the program.
#+end_quote
