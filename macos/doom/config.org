#+TITLE: DOOM EMACS CONFIG
#+DESCRIPTION: Configuration file for Doom Emacs
#+AUTHOR: s.takoor
#+PROPERTY: header-args :tangle config.el
#+auto_tangle: t
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc:
  - [[#overview][OVERVIEW]]
  - [[#about][ABOUT]]
  - [[#fonts][FONTS]]
  - [[#themes][THEMES]]
  - [[#line-numbers][LINE NUMBERS]]
  - [[#org-directory][ORG DIRECTORY]]
  - [[#all-the-icon][ALL-THE-ICON]]
  - [[#latex][LATEX]]
  - [[#language-server-protocol-lsp][LANGUAGE SERVER PROTOCOL (LSP)]]
  - [[#beacon][BEACON]]
  - [[#org-auto-tangle][ORG-AUTO-TANGLE]]

** OVERVIEW
Personal DOOM EMACS config

** ABOUT
#+begin_src emacs-lisp
(setq user-full-name "Shashiduth Takoor"
      user-mail-address "shashiduth.takoor@gmail.com")
#+end_src

** FONTS
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Iosevka Nerd Font" :size 12 :weight 'semi-light)
      doom-variable-pitch-font (font-spec :family "Iosevka Nerd Font" :size 13))
#+end_src

** THEMES
#+begin_src emacs-lisp
(setq doom-theme 'doom-zenburn)
(setq zenburn-use-variable-pitch t)
(setq zenburn-scale-org-headlines t)
(setq zenburn-scale-outline-headlines t)
#+end_src

** LINE NUMBERS
#+begin_src emacs-lisp
(setq display-line-numbers-type t)
#+end_src

** ORG DIRECTORY
#+begin_src emacs-lisp
(setq org-directory "~/Documents/org/")
#+end_src

** ALL-THE-ICON
#+begin_src emacs-lisp
(all-the-icons-completion-mode)
(add-hook 'marginalia-mode-hook #' all-the-icons-completion-marginalia-setup)
#+end_src

** LATEX
#+begin_src emacs-lisp
(require 'ox-latex)
(with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes
             '("org-article"
               "\\documentclass{article}
           [NO-DEFAULT-PACKAGES]
           [PACKAGES]
           [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\subsection{%s}" . "\\subsection*{%s}")
               ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
               ("\\paragraph{%s}" . "\\paragraph*{%s}"))))

;; Pagebreak for table of contents
(setq org-latex-toc-command "\\tableofcontents \\clearpage")
#+end_src

** LANGUAGE SERVER PROTOCOL (LSP)
*** Corfu completion module
#+begin_src emacs-lisp
(add-hook 'doom-init-modules-hook
          (lambda ()
            (after! lsp-mode
              (setq lsp-completion-provider :none))))

;; Pad before lsp modeline error info
(add-hook 'lsp-mode-hook
          (lambda ()
            (setf (caadr
                   (assq 'global-mode-string mode-line-misc-info))
                  " ")))

;; Set orderless filtering for LSP-mode completions
(add-hook 'lsp-completion-mode-hook
          (lambda ()
            (setf (alist-get 'lsp-capf completion-category-defaults) '((styles . (orderless))))))

;; Set bindings
(map! :i "C-@" #'completion-at-point
      :i "C-SPC" #'completion-at-point
      (:prefix "C-x"
       :i "C-k" #'cape-dict
       :i "C-f" #'cape-file
       :i "s" #'cape-ispell
       :i "C-n" #'cape-keyword
       :i "C-s" #'dabbrev-completion))

;; Fallback cleanly to consult in TUI
(setq-default completion-in-region-function #'consult-completion-in-region)

(use-package corfu
  :custom
  (corfu-separator ?\s)          ;; Orderless field separator
  (corfu-preview-current nil)    ;; Disable current candidate preview
  (corfu-auto nil)
  (corfu-on-exact-match nil)
  (corfu-quit-no-match 'separator)
  (corfu-preselect-first nil)
  :hook
  (doom-first-buffer . global-corfu-mode)
  :bind (:map corfu-map
         ("SPC" . corfu-insert-separator)
         ("TAB" . corfu-next)
         ([tab] . corfu-next)
         ("S-TAB" . corfu-previous)
         ([backtab] . corfu-previous)))

(use-package corfu-doc
  :hook
  (corfu-mode . corfu-doc-mode)
  :bind (:map corfu-map
         ("M-n" . corfu-doc-scroll-down)
         ("M-p" . corfu-doc-scroll-up)
         ("M-d" . corfu-doc-toggle)))

(use-package orderless
  :when (featurep! +orderless)
  :init
  (setq completion-styles '(orderless)
        completion-category-defaults nil
        completion-category-overrides '((file (styles . (partial-completion))))))

(use-package kind-icon
  :after corfu
  :custom
  (kind-icon-default-face 'corfu-default) ; to compute blended backgrounds correctly
  :config
  (add-to-list 'corfu-margin-formatters #'kind-icon-margin-formatter))

(use-package cape
  :defer t
  :init
  (add-to-list 'completion-at-point-functions #'cape-file-capf)
  (add-to-list 'completion-at-point-functions #'cape-dabbrev-capf)
  (add-to-list 'completion-at-point-functions #'cape-keyword-capf))

(setq completion-cycle-threshold 1)

;; Enable indentation+completion using the TAB key.
;; Completion is often bound to M-TAB.
(setq tab-always-indent 'complete)

;; Dirty hack to get c completion running
;; Discussion in https://github.com/minad/corfu/issues/34
(when (equal tab-always-indent 'complete)
  (map! :map c-mode-base-map
        :i [remap c-indent-line-or-region] #'completion-at-point))
#+end_src

** BEACON
#+begin_src emacs-lisp
(beacon-mode 1)
#+end_src

** ORG-AUTO-TANGLE
Automatically tangle when saving ~.org~ files
#+begin_src emacs-lisp
(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  :config
  (setq org-auto-tangle-default t))
#+end_src
